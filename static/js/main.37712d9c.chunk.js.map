{"version":3,"sources":["components/EmploymentHistory.js","components/Education.js","components/CvItem.js","App.js","serviceWorker.js","index.js"],"names":["EmploymentHistory","_ref","historyList","employmentHistories","map","emp","desClass","resClass","techClass","description","responsibility","technologies","react_default","a","createElement","key","id","className","title","position","productLink","duration","company","teamSize","split","x","Education","educationList","educations","edu","Math","random","CvItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","cvItems","cvItemList","cv","userName","src","imgSrc","alt","aboutMe","summary","objective","personalDetails","fullName","alias","jobTitle","maritalStatus","email","skypeId","mobile","interest","skills","programmingLanguages","frameworksPlatforms","database","versionControl","ide","foreignLanguage","knowledge","experiences","careerSummary","components_EmploymentHistory","employmentHistory","components_Education","education","Component","App","data","href","data-target","components_CvItem","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.37712d9c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst EmploymentHistory = ({ employmentHistories }) => {\r\n    const historyList = employmentHistories.map(emp => {\r\n        var desClass = \"col s12 l12\";\r\n        var resClass = \"col s12 l12\";\r\n        var techClass = \"col s12 l12\";\r\n\r\n        if ((emp.description !== \"\" && emp.responsibility !== \"\") || (emp.description !== \"\" && emp.technologies !== \"\") || (emp.responsibility !== \"\" && emp.technologies !== \"\")) {\r\n            desClass = \"col s12 l6\"\r\n            resClass = \"col s12 l6\"\r\n            techClass = \"col s12 l6\";\r\n        }\r\n\r\n        if (emp.description !== \"\" && emp.responsibility !== \"\" && emp.technologies !== \"\")\r\n            techClass = \"col s12 l12\";\r\n\r\n        return (\r\n            <div key={emp.id}>\r\n                <div className=\"col s12 l12 title-divide\">\r\n                    <h6><strong>{emp.title}</strong></h6>\r\n                </div>\r\n                <br />\r\n                <p>\r\n                    {(() => {\r\n                        return emp.position !== \"\" ? (\r\n                            <span key={emp.position}><span className=\"h7\">Position:</span> {emp.position}<br /></span>\r\n                        ) : null;\r\n                    })()}\r\n                    {(() => {\r\n                        return emp.productLink !== \"\" ? (\r\n                            <span key={emp.productLink}><span className=\"h7\">Product Link:</span> {emp.productLink}<br /></span>\r\n                        ) : null;\r\n                    })()}\r\n                    {(() => {\r\n                        return emp.duration !== \"\" ? (\r\n                            <span key={emp.duration}><span className=\"h7\">Duration:</span> {emp.duration}<br /></span>\r\n                        ) : null;\r\n                    })()}\r\n                    {(() => {\r\n                        return emp.company !== \"\" ? (\r\n                            <span key={emp.company}><span className=\"h7\">Company:</span> {emp.company}<br /></span>\r\n                        ) : null;\r\n                    })()}\r\n                    {(() => {\r\n                        return emp.teamSize !== \"\" ? (\r\n                            <span key={emp.teamSize}><span className=\"h7\">Team Size:</span> {emp.teamSize}<br /></span>\r\n                        ) : null;\r\n                    })()}\r\n                </p>\r\n                <div className=\"row\">\r\n                    {(() => {\r\n                        return emp.description !== \"\" ? (\r\n                            <div className={desClass}>\r\n                                <h6>Description</h6>\r\n                                <p>\r\n                                    {emp.description.split('\\n').map(x => {\r\n                                        return (<span key={x}>{x}<br /></span>)\r\n                                    })}\r\n                                </p>\r\n                            </div>\r\n                        ) : null;\r\n                    })()}\r\n                    {(() => {\r\n                        return emp.responsibility !== \"\" ? (\r\n                            <div className={resClass}>\r\n                                <h6>Responsibility</h6>\r\n                                <p>\r\n                                    {emp.responsibility.split('\\n').map(x => {\r\n                                        return (<span key={x}>{x}<br /></span>)\r\n                                    })}\r\n                                </p>\r\n                            </div>\r\n                        ) : null;\r\n                    })()}\r\n                    {(() => {\r\n                        return emp.technologies !== \"\" ? (\r\n                            <div className={techClass}>\r\n                                <h6>Technologies</h6>\r\n                                {\r\n                                    emp.technologies.split('\\n').map(x => {\r\n                                        return (<span key={x}>{x}<br /></span>)\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        ) : null;\r\n                    })()}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div>{historyList}</div>\r\n    )\r\n}\r\n\r\nexport default EmploymentHistory\r\n","import React from 'react';\r\n\r\nconst Education = ({ educations }) => {\r\n    const educationList = educations.map(edu => {\r\n        return (\r\n            <div key={edu.id}>\r\n                <h6>{edu.title}</h6>\r\n                {(() => {\r\n                    return edu.description !== \"\" ? (\r\n                        edu.description.split('\\n').map(x => {\r\n                            return (<span key={Math.random()}>{x}<br /></span>)\r\n                        })\r\n                    ) : null;\r\n                })()}\r\n\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div>{educationList}</div>\r\n    )\r\n}\r\n\r\nexport default Education","import React, { Component } from 'react';\r\nimport EmploymentHistory from './EmploymentHistory';\r\nimport Education from './Education';\r\n\r\nclass CvItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cvItems: props.cvItems\r\n        };\r\n    }\r\n    render() {\r\n        const cvItemList = this.state.cvItems.map(cv => {\r\n            return (\r\n                <section className=\"container section scrollspy\" id={cv.id} key={cv.id}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 l12 userName\">\r\n                            <h2>{cv.userName}</h2>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 l4\">\r\n                            <img src={cv.imgSrc} alt=\"\" className=\"responsive-img materialboxed\" />\r\n                        </div>\r\n\r\n                        <div className=\"col s12 l8\">\r\n                            <h4><strong>ABOUT ME</strong></h4>\r\n                            {(() => {\r\n                                return cv.aboutMe.summary !== \"\" ? (\r\n                                    <span>\r\n                                        <h5>Summary</h5>\r\n                                        {cv.aboutMe.summary.split('\\n').map(x => {\r\n                                            return (<p key={x}>{x}</p>)\r\n                                        })}\r\n                                    </span>\r\n                                ) : null;\r\n                            })()}\r\n                            {(() => {\r\n                                return cv.aboutMe.objective !== \"\" ? (\r\n                                    <span>\r\n                                        <h5>Objective</h5>\r\n                                        {cv.aboutMe.objective.split('\\n').map(x => {\r\n                                            return (<p key={x}>{x}</p>)\r\n                                        })}\r\n                                    </span>\r\n                                ) : null;\r\n                            })()}\r\n                            <div className=\"row\">\r\n                                <div className=\"col s12 l6\">\r\n                                    <h5>Personal Details</h5>\r\n                                    <p>\r\n                                        <span className=\"h7\">Full name:</span> {cv.aboutMe.personalDetails.fullName}<br />\r\n                                        <span className=\"h7\">Alias:</span> {cv.aboutMe.personalDetails.alias}<br />\r\n                                        <span className=\"h7\">Job title:</span> {cv.aboutMe.personalDetails.jobTitle}<br />\r\n                                        <span className=\"h7\">Marital status:</span> {cv.aboutMe.personalDetails.maritalStatus}<br />\r\n                                        <span className=\"h7\">Email:</span> {cv.aboutMe.personalDetails.email}<br />\r\n                                        <span className=\"h7\">Skype ID:</span> {cv.aboutMe.personalDetails.skypeId}<br />\r\n                                        <span className=\"h7\">Mobile:</span> {cv.aboutMe.personalDetails.mobile}<br />\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"col s12 l6\">\r\n                                    {(() => {\r\n                                        return cv.aboutMe.interest !== \"\" ? (\r\n                                            <span key={cv.aboutMe.interest}>\r\n                                                <h5>Interests</h5>\r\n                                                {cv.aboutMe.interest.split('\\n').map(x => {\r\n                                                    return (<span key={x}>{x}<br /></span>)\r\n                                                })}\r\n                                            </span>\r\n                                        ) : null;\r\n                                    })()}\r\n\r\n                                </div>\r\n                            </div>\r\n                            <h4><strong>SKILLS</strong></h4>\r\n                            <div className=\"row\">\r\n                                <div className=\"col s12 l4\">\r\n                                    <h6>Programming Languages</h6>\r\n                                    {cv.aboutMe.skills.programmingLanguages.split('\\n').map(x => {\r\n                                        return (<span key={x}>{x}<br /></span>)\r\n                                    })}\r\n                                    <h6>Frameworks & Platforms</h6>\r\n                                    {cv.aboutMe.skills.frameworksPlatforms.split('\\n').map(x => {\r\n                                        return (<span key={x}>{x}<br /></span>)\r\n                                    })}\r\n                                    <h6>Database</h6>\r\n                                    {cv.aboutMe.skills.database.split('\\n').map(x => {\r\n                                        return (<span key={x}>{x}<br /></span>)\r\n                                    })}\r\n                                </div>\r\n                                <div className=\"col s12 l4\">\r\n                                    <h6>Version Control</h6>\r\n                                    {cv.aboutMe.skills.versionControl.split('\\n').map(x => {\r\n                                        return (<span key={x}>{x}<br /></span>)\r\n                                    })}\r\n                                    <h6>IDE</h6>\r\n                                    {cv.aboutMe.skills.ide.split('\\n').map(x => {\r\n                                        return (<span key={x}>{x}<br /></span>)\r\n                                    })}\r\n                                    <h6>Foreign Language</h6>\r\n                                    {cv.aboutMe.skills.foreignLanguage.split('\\n').map(x => {\r\n                                        return (<span key={x}>{x}<br /></span>)\r\n                                    })}\r\n                                </div>\r\n                                <div className=\"col s12 l4\">\r\n                                    <h6>Knowledge / Other Skills</h6>\r\n                                    {cv.aboutMe.skills.knowledge.split('\\n').map(x => {\r\n                                        return (<span key={x}>{x}<br /></span>)\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                            <h4><strong>EXPERIENCES</strong></h4>\r\n                            {(() => {\r\n                                return cv.experiences.careerSummary !== \"\" ? (\r\n                                    <span>\r\n                                        <h5>Career Summary</h5>\r\n                                        {cv.experiences.careerSummary.split('\\n').map(x => {\r\n                                            return (<span key={x}>{x}<br /></span>)\r\n                                        })}\r\n                                    </span>\r\n                                ) : null;\r\n                            })()}\r\n                            <br />\r\n                            <h5>Employment History - Work Experiences</h5>\r\n                            <EmploymentHistory employmentHistories={cv.experiences.employmentHistory} />\r\n\r\n                            <br />\r\n                            <h4><strong>EDUCATION</strong></h4>\r\n                            <Education educations={cv.education} />\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )\r\n        })\r\n        return (\r\n            <div>{cvItemList}</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CvItem","import React, { Component } from 'react';\n\nimport CvItem from './components/CvItem';\nimport data from './data.json';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cvItems: data.cvItems\n    };\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <div className=\"navbar-fixed\">\n            <nav className=\"nav-wraper indigo\">\n              <div className=\"container\">\n                <a href=\"#\" className=\"brand-logo\"><strong>Fullstack Team</strong></a>\n                <a href=\"#\" className=\"sidenav-trigger\" data-target=\"mobile-menu\">\n                  <i className=\"material-icons\">menu</i>\n                </a>\n                <ul className=\"right hide-on-med-and-down\">\n                  <li><a href=\"#hung-hoang\">Hung Hoang</a></li>\n                  {/* <li><a href=\"#hop-chu\">Hop Chu</a></li> */}\n                  {/* <li><a href=\"#duong-pham\">Duong Pham</a></li> */}\n                  {/* <li><a href=\"#trong-nguyen\">Trong Nguyen</a></li> */}\n                  <li><a href=\"#minh-duong\">Minh Duong</a></li>\n                </ul>\n              </div>\n            </nav>\n          </div>\n          <ul className=\"sidenav grey lighten-2\" id=\"mobile-menu\">\n            <li><a href=\"#hung-hoang\" className=\"sidenav-close\">Hung Hoang</a></li>\n            <li><a href=\"#hop-chu\" className=\"sidenav-close\">Hop Chu</a></li>\n            {/* <li><a href=\"#duong-pham\" className=\"sidenav-close\">Duong Pham</a></li> */}\n            <li><a href=\"#trong-nguyen\" className=\"sidenav-close\">Trong Nguyen</a></li>\n            <li><a href=\"#minh-duong\" className=\"sidenav-close\">Minh Duong</a></li>\n          </ul>\n        </header>\n\n        <CvItem cvItems={this.state.cvItems} />\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}